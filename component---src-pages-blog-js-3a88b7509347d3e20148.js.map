{"version":3,"file":"component---src-pages-blog-js-3a88b7509347d3e20148.js","mappings":"6KAEMA,EAAW,SAAAC,GAAK,OACpB,sBAAIC,UAAU,0BACZ,gBAAC,EAAAC,KAAD,CAAMD,UAAU,mBAAmBE,GAAIH,EAAMG,IAAKH,EAAMI,UAFtC,EAoBtB,EAdY,WACX,OACE,uBAAKH,UAAU,oEACX,0BACC,gBAACF,EAAD,CAAUI,GAAG,KAAb,QACA,gBAACJ,EAAD,CAAUI,GAAG,gBAAb,cACA,gBAACJ,EAAD,CAAUI,GAAG,kBAAb,wBACA,gBAACJ,EAAD,CAAUI,GAAG,UAAb,QACA,gBAACJ,EAAD,CAAUI,GAAG,aAAb,YAIP,ECVD,EARe,WACd,OACC,0BAAQF,UAAU,uDACjB,+BAAW,IAAII,MAAOC,eAGxB,ECID,EARgB,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OACd,uBAAKH,UAAU,0BACb,gBAAC,EAAD,MACCG,EACD,gBAAC,EAAD,MAJY,C,+ECDHG,EAAM,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,SAAUN,EAAe,EAAfA,SAClD,GCDaO,EAAAA,EAAAA,gBAAe,cAYhBC,KAAKC,aDXFC,EAAf,EAAQN,MAAkCO,EAA1C,EAA6BN,YAEvBO,EAAM,CACVR,MAAOA,GAASM,EAChBL,YAAaA,GAAeM,EAC5BE,IAAI,GALN,EAA8DC,SAK1CR,GAAQ,KAG5B,OACE,gCACE,6BAAQM,EAAIR,OACZ,wBAAMW,KAAK,cAAcC,QAASJ,EAAIP,cACrCL,EAGN,C,6GE0BD,UAtCiB,SAAC,GAAY,IAAXiB,EAAU,EAAVA,KACjB,OACM,gBAAC,IAAD,KACE,wBAAMpB,UAAU,8CAA8CqB,KAAK,QACjE,sBAAIrB,UAAU,YAAd,gBACCoB,EAAKE,kBAAkBC,MAAMC,KAAI,SAAAC,GAAI,OAClC,uBAAKzB,UAAU,QAAQ0B,IAAOD,EAAKE,KAAKC,IACpC,sBAAI5B,UAAU,WAAU,gBAAC,EAAAC,KAAD,CAAMC,GAAIuB,EAAKE,KAAKE,YAAYC,MAAOL,EAAKE,KAAKE,YAAYtB,QACrF,0CAAmBkB,EAAKE,KAAKE,YAAYE,OAAzC,IAAmD,KAAnD,MACON,EAAKE,KAAKE,YAAYG,MAC5B,6BAAMP,EAAKE,KAAKM,SACjB,gBAAC,EAAAhC,KAAD,CAAMD,UAAU,wBAAwBE,GAAIuB,EAAKE,KAAKE,YAAYC,MAAlE,aAN8B,KAYjD,EAuBM,IAAMI,EAAO,kBACnB,gBAAC,IAAD,CAAK3B,MAAM,iCACT,wBAAM4B,QAAQ,UACd,wBAAMjB,KAAK,WAAWC,QAAQ,uNAHb,C","sources":["webpack://teakle-tutoring/./src/components/nav.js","webpack://teakle-tutoring/./src/components/footer.js","webpack://teakle-tutoring/./src/components/layout.js","webpack://teakle-tutoring/./src/components/seo.js","webpack://teakle-tutoring/./src/hooks/use-site-metadata.js","webpack://teakle-tutoring/./src/pages/blog.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nconst ListLink = props => (\n  <li className=\"inline-block mr-4 mb-4\">\n    <Link className=\"text-white block\" to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Nav = () => {\n\treturn (\n\t\t\t<nav className=\"h-24 sm:h-24 md:h-16 lg:h-16 xl:h-16 bg-gray-800 block px-6 pt-6\">\n\t\t\t    <ul>\n\t\t\t\t    <ListLink to=\"/\">Home</ListLink>\n\t\t\t\t    <ListLink to=\"/how-i-work/\">How I Work</ListLink>\n\t\t\t\t    <ListLink to=\"/testimonials/\">Student Testimonials</ListLink>\n\t\t\t\t    <ListLink to=\"/blog/\">Blog</ListLink>\t\t\t\t    \n\t\t\t\t    <ListLink to=\"/contact/\">Contact</ListLink>\n\t\t\t    </ul>\n\t\t    </nav>   \t\n\t);\n}\n\nexport default Nav;","import React from \"react\"\n\nconst Footer = () => {\n\treturn (\n\t\t<footer className=\"bg-gray-800 global-footer text-gray-500 text-center\">\n\t\t\t<p>&copy; {new Date().getFullYear()}</p>  \n\t\t</footer>\n\t\t);\n}\n\nexport default Footer;","import React from \"react\"\nimport Nav from \"./nav.js\"\nimport Footer from \"./footer.js\"\n\nconst Layout =  ({ children }) => (\n  <div className=\"flex flex-col h-screen\">\n    <Nav />\n    {children}\n    <Footer />\n  </div>\n)\n\nexport default Layout","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\nexport const Seo = ({ title, description, pathname, children }) => {\n  const { title: defaultTitle, description: defaultDescription, siteUrl } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      {children}\n    </>\n  )\n}","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}","import React from \"react\"\nimport { Seo } from \"../components/seo\"\nimport Layout from \"../components/layout\"\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby'\n\n\nconst BlogPage = ({data}) => {\n  return (    \n        <Layout>\n          <main className=\"flex-grow pt-8 sm:mx-20 mx-5 content-center\" role=\"main\">\n            <h1 className=\"text-4xl\">Latest Posts</h1>\n            {data.allMarkdownRemark.edges.map(post => (\n                <div className=\"my-10\" key = {post.node.id}>\n                    <h2 className=\"text-xl\"><Link to={post.node.frontmatter.path}>{post.node.frontmatter.title}</Link></h2>\n                    <small>Posted by { post.node.frontmatter.author } {'  '} \n                      on { post.node.frontmatter.date }</small>\n                     <p> { post.node.excerpt }</p>\n                    <Link className=\"text-sm text-blue-400\" to={post.node.frontmatter.path}>Read more</Link>\n                </div>\n              ))}\n          </main>         \n        </Layout> \n    );\n}\n\nexport const pageQuery = graphql `\n  query BlogIndexQuery {\n  allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/blog-posts/\"}}) {\n    edges {\n      node {\n        id\n        excerpt(pruneLength: 240, format: PLAIN)\n        frontmatter {\n          author\n          date(formatString: \"DD MMMM, YYYY\")\n          path\n          title\n        }\n      }\n    }\n  }\n}\n`\n\nexport default BlogPage\n\nexport const Head = () => (\n\t<Seo title=\"Mathew Teakle Tutoring | Blog\" >\n\t  <meta charSet=\"utf-8\" />\n\t  <meta name=\"keywords\" content=\"Find a Tutor, English Tutor, English Teacher, Private Tutor English, Online Teacher English, Private English Teacher, HSC English Tutor, High School English, High School Literacy Tutor, Essays, Creative Writing\" />\n\t</Seo>\n  )"],"names":["ListLink","props","className","Link","to","children","Date","getFullYear","Seo","title","description","pathname","useStaticQuery","site","siteMetadata","defaultTitle","defaultDescription","seo","url","siteUrl","name","content","data","role","allMarkdownRemark","edges","map","post","key","node","id","frontmatter","path","author","date","excerpt","Head","charSet"],"sourceRoot":""}